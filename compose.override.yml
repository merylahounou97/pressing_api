services:
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 80:80
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - pressing


  postgres:
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust #Uniquement en developpement
    volumes:
      - ./secrets/postgres_password.txt:/run/secrets/postgres_password:ro
      - ./scripts/init_test_databases.sh:/docker-entrypoint-initdb.d/init_test_databases.sh:ro


    ports:
      - "5432:5432"
  pressing_api:
    build:
      context: .
      dockerfile: dev.Dockerfile
    develop:
      watch:
        - path: ./src
          action: sync+restart
          target: /app/src
        - path: ./test
          action: sync+restart
          target: /app/test
        - path: ./Makefile
          action: sync+restart
          target: /app/Makefile
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./Pipfile:/app/Pipfile
      - /root/.local/share/virtualenvs/app-4PlAip0Q
      - ./tmp:/tmp


  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    ports:
      - "4040:4040"
    environment:
      - NGROK_PORT=8000
      - NGROK_AUTHTOKEN= ${NGROK_AUTHTOKEN} 
    command:  http pressing_api:8000
    networks:
      - pressing
      - traefik_net

volumes:
  pgadmin-data:
    name: pgadmin-data